[file-run]
command="$(VIM_FILEPATH)"
command:c/linux=gcc -g -O2 -Wall -lm "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" && "$(VIM_PATHNOEXT)"
command:c/win32="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" > nul && clang -g -O2 -Wall $(VIM_FILEPATH) -o $(VIM_PATHNOEXT).exe && $(VIM_PATHNOEXT).exe
command:cpp/linux=g++ -g -O2 -Wall -lm -std=c++2a "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" && "$(VIM_PATHNOEXT)"
command:cpp/win32="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" > nul && clang++ -g -O2 -Wall -std=c++2a $(VIM_FILEPATH) -o $(VIM_PATHNOEXT).exe && $(VIM_PATHNOEXT).exe
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:rust=rustc -g "$(VIM_FILEPATH)" && "$(VIM_PATHNOEXT)"
output=terminal
cwd=$(VIM_FILEDIR)
save=2

[project-init:debug]
command=mkdir -p build && cd build && cmake -G Ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Debug ..
cwd=$(VIM_CWD)
errorformat=

[project-init:release]
command=mkdir -p build && cd build && cmake -G Ninja -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=/opt/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release ..
cwd=$(VIM_CWD)
errorformat=

[project-build]
command:rust=cargo build
command=cmake --build build
errorformat=%f:%l:%m
cwd=$(VIM_CWD)

[project-run]
command:rust=cargo run
command="build/$(VIM_PRONAME)"
cwd=$(VIM_CWD)
output=terminal
